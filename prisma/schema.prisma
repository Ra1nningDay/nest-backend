// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id Int @id @default(autoincrement())
  name String @unique
  description String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  users UserRole[]
  @@map("roles")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  password String
  avatar String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  roles UserRole[]
  @@map("users")
}

model UserRole {
  id Int @id @default(autoincrement())
  role_id Int
  user_id Int
  createdAt DateTime @default(now())
  updated_at DateTime @updatedAt
  role Role @relation(fields: [role_id], references: [id])
  user User @relation(fields: [user_id], references: [id])
  @@map("user_role")
}

model Category {
  id Int @id @default(autoincrement())
  name String
  description String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  product Product[]
  @@map("product_category")
}

model Product {
  id Int @id @default(autoincrement())
  category_id Int
  name String
  price Decimal
  stock_quantity Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  category Category @relation(fields: [category_id], references: [id])
}